name: tudatBundleCI
# adapted from:
# https://github.com/jherico/starter-workflows/blob/master/ci/cmake.yml
# and
# https://github.com/onqtam/doctest/blob/master/.github/workflows/main.yml

on: 
  push:
    branches:
      - master

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        name: [
          ubuntu-gcc,
        ]

        include:
        - name: ubuntu-gcc
          os: ubuntu-latest
          compiler: gcc
 
    env:
      TUDAT_FLAGS: -DUSE_PAGMO=ON -DBUILD_WITH_EXTENDED_PRECISION_PROPAGATION_TOOLS=ON -DBUILD_WITH_SOCIS_2019=ON -DBUILD_WITH_FILTERS=ON
      # TUDAT_FLAGS: -DUSE_NLOPT=ON -DUSE_PAGMO=ON -DBUILD_WITH_EXTENDED_PRECISION_PROPAGATION_TOOLS=ON -DBUILD_WITH_SOCIS_2019=ON -DBUILD_WITH_FILTERS=ON

    steps:
    - uses: actions/checkout@v1

    - name: Set Compiler Environment
      shell: bash
      run: |
        if [ "${{ matrix.compiler }}" = "clang" ]; then
          echo "::set-env name=CC::clang"
          echo "::set-env name=CXX::clang++"
        else
          echo "::set-env name=CC::gcc"
          echo "::set-env name=CXX::g++"
        fi

    - name: Clone Submodules
      shell: bash
      run: git submodule update --init --recursive

    - name: Create Build Environment
      run: |
        cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake linux
      if: contains(matrix.os, 'ubuntu')
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake $TUDAT_FLAGS -DCMAKE_BUILD_TYPE=$BUILD_TYPE -B . -S ../tudatBundle

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: |
        cmake --build . --target all --config $BUILD_TYPE

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest -C $BUILD_TYPE

    - name: Upload logs
      if: failure()
      uses: actions/upload-artifact@v1
      with:
        name: ${{ matrix.name }}_LatestTest.log
        path: ${{runner.workspace}}/build/Testing/Temporary/LastTest.log
